{"remainingRequest":"/Users/hiro/workspace/new_my_Trello/node_modules/babel-loader/lib/index.js!/Users/hiro/workspace/new_my_Trello/node_modules/eslint-loader/index.js??ref--12-0!/Users/hiro/workspace/new_my_Trello/src/store/index.js","dependencies":[{"path":"/Users/hiro/workspace/new_my_Trello/src/store/index.js","mtime":1591630899612},{"path":"/Users/hiro/workspace/new_my_Trello/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hiro/workspace/new_my_Trello/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hiro/workspace/new_my_Trello/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgVnVleCBmcm9tICd2dWV4JzsKVnVlLnVzZShWdWV4KTsKY29uc3Qgc2F2ZWRMaXN0cyA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0cmVsbG8tbGlzdHMnKTsKY29uc3Qgc3RvcmUgPSBuZXcgVnVleC5TdG9yZSh7CiAgc3RhdGU6IHsKICAgIGxpc3RzOiBzYXZlZExpc3RzID8gSlNPTi5wYXJzZShzYXZlZExpc3RzKSA6IFt7CiAgICAgIHRpdGxlOiAiQmFja2xvZyIsCiAgICAgIGNhcmRzOiBbewogICAgICAgIGJvZHk6ICJFbmdsaXNoIgogICAgICB9LCB7CiAgICAgICAgYm9keTogIk1hdGhlbWF0aWNhcyIKICAgICAgfV0KICAgIH0sIHsKICAgICAgdGl0bGU6ICJUb2RvIiwKICAgICAgY2FyZHM6IFt7CiAgICAgICAgYm9keTogIlNjaWVuY2UiCiAgICAgIH1dCiAgICB9LCB7CiAgICAgIHRpdGxlOiAnRG9pbmcnLAogICAgICBjYXJkczogW10KICAgIH1dCiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIGFkZGxpc3Qoc3RhdGUsIHBheWxvYWQpIHsKICAgICAgc3RhdGUubGlzdHMucHVzaCh7CiAgICAgICAgdGl0bGU6IHBheWxvYWQudGl0bGUsCiAgICAgICAgY2FyZHM6IFtdCiAgICAgIH0pOwogICAgfSwKCiAgICByZW1vdmVsaXN0KHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgIHN0YXRlLmxpc3RzLnNwbGljZShwYXlsb2FkLmxpc3RJbmRleCwgMSk7CiAgICB9LAoKICAgIGFkZENhcmRUb0xpc3Qoc3RhdGUsIHBheWxvYWQpIHsKICAgICAgc3RhdGUubGlzdHNbcGF5bG9hZC5saXN0SW5kZXhdLmNhcmRzLnB1c2goewogICAgICAgIGJvZHk6IHBheWxvYWQuYm9keQogICAgICB9KTsKICAgIH0sCgogICAgcmVtb3ZlQ2FyZEZyb21MaXN0KHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgIHN0YXRlLmxpc3RzW3BheWxvYWQubGlzdEluZGV4XS5jYXJkcy5zcGxpY2UocGF5bG9hZC5jYXJkSW5kZXgsIDEpOwogICAgfSwKCiAgICB1cGRhdGVMaXN0KHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgIHN0YXRlLmxpc3RzID0gcGF5bG9hZC5saXN0czsKICAgIH0KCiAgfSwKICBhY3Rpb25zOiB7CiAgICBhZGRsaXN0KGNvbnRleHQsIHBheWxvYWQpIHsKICAgICAgY29udGV4dC5jb21taXQoJ2FkZGxpc3QnLCBwYXlsb2FkKTsKICAgIH0sCgogICAgcmVtb3ZlbGlzdChjb250ZXh0LCBwYXlsb2FkKSB7CiAgICAgIGNvbnRleHQuY29tbWl0KCdyZW1vdmVsaXN0JywgcGF5bG9hZCk7CiAgICB9LAoKICAgIGFkZENhcmRUb0xpc3QoY29udGV4dCwgcGF5bG9hZCkgewogICAgICBjb250ZXh0LmNvbW1pdCgnYWRkQ2FyZFRvTGlzdCcsIHBheWxvYWQpOwogICAgfSwKCiAgICByZW1vdmVDYXJkRnJvbUxpc3QoY29udGV4dCwgcGF5bG9hZCkgewogICAgICBjb250ZXh0LmNvbW1pdCgncmVtb3ZlQ2FyZEZyb21MaXN0JywgcGF5bG9hZCk7CiAgICB9LAoKICAgIHVwZGF0ZUxpc3QoY29udGV4dCwgcGF5bG9hZCkgewogICAgICBjb250ZXh0LmNvbW1pdCgndXBkYXRlTGlzdCcsIHBheWxvYWQpOwogICAgfQoKICB9LAogIGdldHRlcnM6IHsKICAgIHRvdGFsQ2FyZENvdW50KHN0YXRlKSB7CiAgICAgIGxldCBjb3VudCA9IDA7CiAgICAgIHN0YXRlLmxpc3RzLm1hcChjb250ZW50ID0+IGNvdW50ICs9IGNvbnRlbnQuY2FyZHMubGVuZ3RoKTsKICAgICAgcmV0dXJuIGNvdW50OwogICAgfQoKICB9Cn0pOwpzdG9yZS5zdWJzY3JpYmUoKG11dGF0aW9uLCBzdGF0ZSkgPT4gewogIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd0cmVsbG8tbGlzdCcsIEpTT04uc3RyaW5naWZ5KHN0YXRlLmxpc3RzKSk7Cn0pOwpleHBvcnQgZGVmYXVsdCBzdG9yZTs="},{"version":3,"sources":["/Users/hiro/workspace/new_my_Trello/src/store/index.js"],"names":["Vue","Vuex","use","savedLists","localStorage","getItem","store","Store","state","lists","JSON","parse","title","cards","body","mutations","addlist","payload","push","removelist","splice","listIndex","addCardToList","removeCardFromList","cardIndex","updateList","actions","context","commit","getters","totalCardCount","count","map","content","length","subscribe","mutation","setItem","stringify"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex)\r\n\r\nconst savedLists = localStorage.getItem('trello-lists')\r\n\r\nconst store = new Vuex.Store({\r\n  state: {\r\nã€€  lists: savedLists ? JSON.parse(savedLists): [\r\n      {\r\n        title: \"Backlog\",\r\n        cards: [\r\n          { body: \"English\" },\r\n          { body: \"Mathematicas\" },\r\n        ]\r\n      },\r\n      {\r\n        title:\"Todo\",\r\n        cards: [\r\n          { body: \"Science\" }\r\n        ]\r\n      },\r\n      {\r\n        title: 'Doing',\r\n        cards: []\r\n      }\r\n    ],\r\n  },\r\n  mutations: {\r\n    addlist(state, payload) {\r\n      state.lists.push({ title: payload.title, cards:[] })\r\n    },\r\n    removelist(state, payload) {\r\n      state.lists.splice(payload.listIndex, 1)\r\n    },\r\n    addCardToList(state, payload) {\r\n      state.lists[payload.listIndex].cards.push({ body: payload.body })\r\n    },\r\n    removeCardFromList(state, payload) {\r\n      state.lists[payload.listIndex].cards.splice(payload.cardIndex, 1)\r\n    },\r\n    updateList(state, payload) {\r\n      state.lists = payload.lists\r\n    }\r\n  },\r\n  actions: {\r\n    addlist(context, payload) {\r\n      context.commit('addlist', payload)\r\n    },\r\n    removelist(context, payload) {\r\n      context.commit('removelist', payload)\r\n    },\r\n    addCardToList(context, payload) {\r\n      context.commit('addCardToList', payload)\r\n    },\r\n    removeCardFromList(context, payload) {\r\n      context.commit('removeCardFromList', payload)\r\n    },\r\n    updateList(context, payload) {\r\n      context.commit('updateList', payload)\r\n    }\r\n  },\r\n  getters: {\r\n    totalCardCount(state) {\r\n      let count = 0\r\n      state.lists.map(content => count += content.cards.length)\r\n      return count\r\n    },\r\n  },\r\n})\r\n\r\nstore.subscribe((mutation, state) => {\r\n  localStorage.setItem('trello-list', JSON.stringify(state.lists))\r\n})\r\n\r\nexport default store"]}]}